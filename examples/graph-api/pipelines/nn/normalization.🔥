# ===----------------------------------------------------------------------=== #
# Copyright (c) 2024, Modular Inc. All rights reserved.
#
# Licensed under the Apache License v2.0 with LLVM Exceptions:
# https://llvm.org/LICENSE.txt
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ===----------------------------------------------------------------------=== #

"""Normalization layers."""

from max.graph import ops, Symbol


@value
struct RMSNorm:
    var eps: Float64
    var weight: Symbol

    def __call__(self, input: Symbol) -> Symbol:
        g = input.graph()
        input_type = input.tensor_type()
        return ops.custom["rms_norm"](
            List[Symbol](
                input,
                ops.cast(self.weight, input_type.dtype),
                ops.cast(g.scalar[DType.float64](self.eps), input_type.dtype),
            ),
            input.type(),
        )
