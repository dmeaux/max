# ===----------------------------------------------------------------------=== #
# Copyright (c) 2024, Modular Inc. All rights reserved.
#
# Licensed under the Apache License v2.0 with LLVM Exceptions:
# https://llvm.org/LICENSE.txt
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ===----------------------------------------------------------------------=== #
"""Pipeline for quantizing a Llama model trained on TinyStories."""

from pathlib import cwd

from max.graph.checkpoint import load, current_version, read_version

from .quantize_tinystories import quantize_and_save_tinystories
from .load_tinystories import load_quantized_tinystories


def quantize_tinystories_run():
    """Runs the quantize TinyStories pipeline."""
    cache_path = cwd().joinpath(".cache")
    checkpoint_path = cache_path.joinpath("stories15M_quantized.max")
    if not checkpoint_path.exists():
        quantize_and_save_tinystories(checkpoint_path)
        return

    # Checkpoint exists, make sure that the file version is compatible.
    try:
        file_version = read_version(checkpoint_path).major_version
    except:
        compatible = False
    else:
        current = current_version().major_version
        compatible = file_version <= current
        # This print is required as a workaround to MOCO-933.
        print(
            "Found max checkpoint version ",
            file_version,
            " (current version=",
            current,
            ").",
            sep="",
        )

    if compatible:
        load_quantized_tinystories(checkpoint_path)
    else:
        print(
            "Detected incompatible cached checkpoint at ",
            checkpoint_path,
            ". This checkpoint will be overwritten.",
            sep="",
        )
        quantize_and_save_tinystories(checkpoint_path)
